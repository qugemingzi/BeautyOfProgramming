public class LightCut {
    /*
        这道题讲的是在坐标系中限制x值为[A, B]区间内，给定若干光影，求将平面分割为几个区域
        除掉三线共点的情况，也除掉平行于y轴的情况
        idea 1:
        从最简单的情况开始分析，只有一条直线a将该区域分割为2个部分，即原始有1个区域，1条直线，0个交点
        再加入一条直线b与直线a相交于一点，且位于[A, B]区间内，共为4个区域，原始1个，2条直线，1个交点
        再来一条直线c与直线a和直线b都有位于[A, B]区间内的交点，共7个区域，原始1个，3条直线，3个交点
        所以我们可以得到 区域数为 "N+M+1" N条直线，M个交点（位于[A, B]区间内），1个原始区域
        求取交点时间复杂度O(N^2)，交点数组Intersect，每次查询复杂度O(|Intersect|)
        若将交点数组按x轴排序，初始复杂度O(N^2+|Intersect|*log|Intersect|)，查询复杂度O(log|Intersect|)
        idea 2:
        将交点问题转化成逆序数，每条直线与A和B有交点，将所有直线与A交点按y轴排序，从大到小分别设置为直线1,2,3...
        将已经赋值的直线于B交点按y轴排序得到了直线排序，比如按上面例子
        一条直线的情况下，A为直线1，B也为直线1
        两条直线的情况下，A为直线1,2，B为直线2,1，直线排序为21
        三条直线的情况下，A为直线1,2,3，B为直线3,2,1，直线排序为321
        对应的直线排序的逆序数则为交点个数，因为一个逆序对对应两条直线在[A, B]区间内有交点，类推
        暴力求解复杂度O(N^2)，采用归并排序分而治之的思想，可将时间复杂度降为O(N*logN)，转换的非常巧妙👍
     */
}
